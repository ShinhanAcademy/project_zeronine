<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.zeronine.board">

	<select id="selectFastBoardList" resultType="map">
		select b."boardId",b."title", b."boardContent", b."uploadTime", b."finishTime", p."productId", p."pName", p."brand", p."price", p."pCount", sum(sp."pickCount") as "totalpickCount", pi."imagePath"
			from public."board" as b
			join public."selectProduct" as sp on (b."boardId" = sp."boardId")
			join public."product" as p on (p."productId" = sp."productId")
			join public."productMainImage" as pi on (p."productId" = pi."productId")
			group by b."boardId",b."title", b."boardContent", b."uploadTime", b."finishTime", p."productId", p."pName", p."brand", p."price", p."pCount", pi."imagePath"
			order by b."uploadTime" desc
	</select>
	<select id="selectByBidlist" parameterType="String"
		resultType="String">
		select "boardId" from "likedBoard" where "customerId" =
		CAST(#{custid} AS UUID)
	</select>
	<select id="selectFastDetail" resultType="map">
		select b."boardId",b."title", b."boardContent", b."finishTime", p."productId", p."pName", p."brand", p."price", p."pCount", sum(sp."pickCount") as "totalpickCount", pi."imagePath"
			from public."board" as b
			left join public."selectProduct" as sp on (b."boardId" = sp."boardId")
			left join public."product" as p on (p."productId" = sp."productId")
			left join public."productMainImage" as pi on (p."productId" = pi."productId")
			where b."boardId"= cast(#{boardId} as UUID)
			group by b."boardId",b."title", b."boardContent", b."finishTime", p."productId", p."pName", p."brand", p."price", p."pCount", pi."imagePath"
	</select>
	
	<select id="selectDealFailBoard" resultType="dealFailRefundVo">
		select distinct "boardId" from public."dealFailRefund"
	</select>
	
	<select id="selectDealSuccessBoard" resultType="dealSuccessBoardVo">
		SELECT  "boardId" FROM public."dealSuccessBoard"
	</select>
	
	<select id="selectFreeDeliveryBoard" resultType="map">
	select "boardId","title","boardContent", "uploadTime", "finishTime", sum(sumprice)
		from (
				select bc."boardId",b."title", b."boardContent", b."uploadTime", b."finishTime",((p."price")* sum(bc."purchaseCount")) as sumprice
				from public."boardCart" as bc
				left join public."product" as p
					on bc."productId" = p."productId"
				left join public."board" as b 
					on bc."boardId" = b."boardId"
				group by bc."boardId",b."title", b."boardContent",b."uploadTime", p."price", b."finishTime"
				) as free_board_data
		group by "boardId","title","boardContent", "uploadTime", "finishTime"
		order by  "uploadTime" desc
</select>

	<select id="selectFreeDetail" resultType="map">
		select "boardId","title","boardContent", "uploadTime", "finishTime", sum(sumprice)
			from (
				select bc."boardId",b."title", b."boardContent", b."uploadTime", b."finishTime",((p."price")* sum(bc."purchaseCount")) as sumprice
					from public."boardCart" as bc
				join public."product" as p
					on bc."productId" = p."productId"
				join public."board" as b 
					on bc."boardId" = b."boardId"
				group by bc."boardId",b."title", b."boardContent",b."uploadTime", p."price", b."finishTime"
				) as free_board_data
			where "boardId" = cast(#{boardId} as UUID)
		group by "boardId","title","boardContent", "uploadTime", "finishTime"
	</select>
	
	<select id="selectOneBoardList" resultType="map">
	select *, (ob."oUploadTime" + (ob."oPostingMinutes" || 'minutes')::interval) as finishTime
		from public."oneToOneBoard" as ob
		join public."oBoardImage" as obi on ob."oBoardId" = obi."oBoardId"
		where "finishTime" > now()
		order by "oUploadTime" desc
	</select>
	
	<select id="selectOneDetail" resultType="map">
	select *, (ob."oUploadTime" + (ob."oPostingMinutes" || 'minutes')::interval) as finishTime
		from public."oneToOneBoard" as ob
		join public."oBoardImage" as obi on ob."oBoardId" = obi."oBoardId"
		where ob."oBoardId"=cast(#{boardId} as UUID)
	</select>
	
	
	
</mapper>