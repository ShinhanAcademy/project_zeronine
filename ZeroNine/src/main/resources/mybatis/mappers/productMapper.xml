<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.zeronine.product">

	<select id="searchAll" parameterType="map"
		resultType="productVo">
		SELECT *
		FROM "product" pd
		<if test="selectedValue==1">
			left join
			(select
			"productId", count("productId") prcount from "likedProduct" group by
			"productId") ld
			on pd."productId" = ld."productId"
		</if>
		<if test="selectedValue==2">
			full outer join (select "productId", count("productId") prcount
			from "deliveryProduct" group by "productId" ) l 
			on l."productId" = "pd"."productId"
		</if>

		WHERE
		("pName" LIKE CONCAT('%',#{inputValue}, '%')
		OR "brand" LIKE CONCAT('%',
		#{inputValue}, '%'))

		AND CAST("pCategoryId" AS VARCHAR) like concat('%',#{buttonValue},'%')

		<if test="selectedValue==3">
			order by price asc
		</if>
		<if test="selectedValue==1">
			order by prcount desc NULLS LAST, pd.price asc
		</if>
		<if test="selectedValue==2">
			order by prcount desc NULLS LAST, "pd"."price" asc
		</if>
		<if test="selectedValue==4">
			order by price desc
		</if>
		LIMIT 12 OFFSET #{start}

	</select>
	<select id="countProduct" parameterType="map"
		resultType="int">
		select count(*)
		FROM "product" pd
		<if test="selectedValue==1">
			left join
			(select
			"productId", count("productId") prcount from "likedProduct" group by
			"productId") ld
			on pd."productId" = ld."productId"
		</if>
		<if test="selectedValue==2">
			(select "productId", count("productId")
			prcount
			from "deliveryProduct" group by "productId" ) l full outer join
			"product"
			pd on l."productId" = "pd"."productId"
		</if>

		WHERE
		("pName" LIKE CONCAT('%',#{inputValue}, '%')
		OR "brand" LIKE CONCAT('%',
		#{inputValue}, '%'))

		AND CAST("pCategoryId" AS VARCHAR) like concat('%',#{buttonValue},'%')

		<if test="selectedValue==3">
			order by price asc
		</if>
		<if test="selectedValue==1">
			order by prcount desc NULLS LAST, pd.price asc
		</if>
		<if test="selectedValue==2">
			order by prcount desc NULLS LAST, "pd"."price" asc
		</if>
		<if test="selectedValue==4">
			order by price desc
		</if>
	</select>
	

	<insert id="insertLikedProduct" parameterType="likedProductVo">
		INSERT INTO
		"likedProduct"("customerId", "productId")
		VALUES (CAST(#{custid} AS
		UUID), CAST(#{productId} AS UUID))
	</insert>
	<delete id="deleteLikedProduct" parameterType="String">
		delete from
		"likedProduct" where "customerId" = CAST(#{custid} AS UUID) and
		"productId" =CAST(#{productId} AS UUID)
	</delete>
	<select id="selectByCidlist" parameterType="String"
		resultType="String">
		select "productId" from "likedProduct" where "customerId" =
		CAST(#{custid} AS UUID)
	</select>




	<select id="selectByProductId" parameterType="String"
		resultType="productVo">
		SELECT "productId", "pName", brand, price
		FROM product
		where
		"productId" = CAST(#{productId} AS UUID)
	</select>
	<select id="selectDetailDelivery4" resultType="productVo">
		SELECT
		"pd"."productId",
		"pd"."pName", "pd"."brand", "pd"."price"
		FROM (
		SELECT
		"productId", COUNT("productId") AS prcount
		FROM "deliveryProduct"
		GROUP
		BY "productId"
		) l
		FULL OUTER JOIN "product" pd ON l."productId" =
		"pd"."productId"
		ORDER BY prcount DESC NULLS LAST, "pd"."price" ASC
		LIMIT 4;
	</select>
	<select id="selectByPricePname" parameterType="String"
		resultType="productVo">
		SELECT price,"pName"
		FROM "product"
		where
		"productId" =
		CAST(#{productId} AS UUID)
	</select>
	
	<!-- 은경 추가 지우기 ㄴㄴ -->
	<select id="selectByProductList" parameterType="String" resultType="productVo">
	  SELECT *
		FROM product
		where
		"productId" in (
		  <foreach collection="array" item="pid" separator="," >
		 	 CAST(#{pid} AS UUID)
		  </foreach>
		)
	</select>
	<select id="selectRecommendedProducts" parameterType="Integer" resultType="productVo">
		SELECT 
			product."productId",
			product."pName",
			product.brand,
			product.price,
			"bestSeller"."totalPickCount",
			"prodImg"."imagePath"
		FROM product
		JOIN (
			SELECT "productId", count("productId") AS "totalPickCount"
		  	FROM "deliveryProduct"
		  	GROUP BY "productId"
		) AS "bestSeller" 
			ON product."productId" = "bestSeller"."productId"
		LEFT JOIN "productMainImage" AS "prodImg"
			ON "prodImg"."productId" = product."productId"
		ORDER BY "bestSeller"."totalPickCount" DESC, product."price" ASC
		LIMIT #{count};
	</select>
	<!-- 은경 추가 지우기 ㄴㄴ -->
</mapper>