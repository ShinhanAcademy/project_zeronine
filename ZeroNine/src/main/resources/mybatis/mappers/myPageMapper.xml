<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.zeronine.mypage">
	<!-- personalInfo -->
	<select id="personalInfoAll" parameterType="String" resultType="map">
		
	</select>

	<!-- order history -->
	<select id="orderHistoryAll" parameterType="String" resultType="map">
		select 
			delivery."purchaseDateTime",
			delivery."deliveryId",
			delivery."customerId",
			delivery."deliveryStatus",
			"deliveryProduct"."productCount",
			product."productId",
			product.brand,
			product."pName",
			product.price,
			"productMainImage"."imagePath",
			ROW_NUMBER()OVER(ORDER BY delivery."deliveryId" DESC) AS ROW_NUM,
			COUNT(*) OVER(PARTITION BY delivery."deliveryId") AS PARTCNT
		from delivery join "deliveryProduct" on delivery."deliveryId" = "deliveryProduct"."deliveryId"
				  join product on "deliveryProduct"."productId" = product."productId"
				  left outer join "productMainImage" on "deliveryProduct"."productId" = "productMainImage"."productId"
				  join customer on delivery."customerId" = customer."customerId"
		where delivery."customerId" = cast(#{customerId} as UUID)
			AND (delivery."purchaseDateTime" >= to_timestamp(#{startDate}, 'YYYY-MM-DD 00:00:00.00') 
			AND delivery."purchaseDateTime" &lt;= to_timestamp(#{endDate}, 'YYYY-MM-DD HH24:MI:SS.MS'))
		 	<if test="searchWord != ''">
				AND (product.brand LIKE #{searchWord} OR
					 product."pName" LIKE #{searchWord})
		 	</if>
		order by delivery."purchaseDateTime" DESC
		LIMIT 5 OFFSET #{page}
	</select>
	<select id="orderHistoryCount" parameterType="map" resultType="int">
   SELECT COUNT(*)
    FROM
        delivery
    JOIN
        "deliveryProduct" ON delivery."deliveryId" = "deliveryProduct"."deliveryId"
    JOIN
        product ON "deliveryProduct"."productId" = product."productId"
    LEFT OUTER JOIN
        "productMainImage" ON "deliveryProduct"."productId" = "productMainImage"."productId"
    JOIN
        customer ON delivery."customerId" = customer."customerId"
    WHERE
        delivery."customerId" = cast(#{customerId} as UUID)
        AND (delivery."purchaseDateTime" >= to_timestamp(#{startDate}, 'YYYY-MM-DD 00:00:00.00') AND delivery."purchaseDateTime" <![CDATA[<=]]> to_timestamp(#{endDate}, 'YYYY-MM-DD HH24:MI:SS.MS'))
        <if test="searchWord != ''">
            AND (product.brand LIKE #{searchWord} OR product."pName" LIKE #{searchWord})
        </if>
    <!-- ORDER BY
        delivery."purchaseDateTime" DESC -->

</select>
	<!-- order cancel history -->
	<select id="orderCancelHistoryAll" parameterType="String" resultType="map">
		select
			refund."refundRequestTime",
			"deliveryProduct"."productCount",
			product."productId",
			product.brand,
			product."pName",
			product.price,
			"productMainImage"."imagePath",
			delivery."customerId",
			delivery."deliveryId",
			ROW_NUMBER()OVER(ORDER BY delivery."deliveryId" DESC) AS ROW_NUM,
			COUNT(*) OVER(PARTITION BY delivery."deliveryId") AS PARTCNT
		from delivery  join "deliveryProduct" on delivery."deliveryId" = "deliveryProduct"."deliveryId"
				     join product on "deliveryProduct"."productId" =product."productId"
					 left outer join "productMainImage" on product."productId" = "productMainImage"."productId"
					 join refund on delivery."deliveryId" = refund."deliveryId"
		where delivery."customerId" = cast(#{customerId} as UUID)
			AND (refund."refundRequestTime" >= to_timestamp(#{startDate}, 'YYYY-MM-DD 00:00:00.00') 
			AND refund."refundRequestTime" &lt;= to_timestamp(#{endDate}, 'YYYY-MM-DD HH24:MI:SS.MS'))
		 	<if test="searchWord != ''">
				AND (product.brand LIKE #{searchWord} OR
					 product."pName" LIKE #{searchWord})
		 	</if>
		order by refund."refundRequestTime" DESC
	</select>
	
	<!-- my cart -->
	<select id="myCart" parameterType="String" resultType="map">
		select
			product."productId",
			product.brand,
			product."pName",
			product.price,
			"productMainImage"."imagePath",
			cart."productCount",
			"likedProduct"."productId" AS "likedProductId"
		from customer 
		join cart
			on customer."customerId" = cart."customerId"
		join product
			on cart."productId" = product."productId"
		left outer join "likedProduct"
			on "product"."productId" = "likedProduct"."productId"
			and "customer"."customerId" = "likedProduct"."customerId"
		left outer join "productMainImage"
			on product."productId" = "productMainImage"."productId"
		where customer."customerId" = cast(#{customerId} as UUID)
	</select>
	
	<!-- like product -->
	<select id="likeProduct" parameterType="String" resultType="map">
		select 
			"productMainImage"."imagePath",
			product."productId",
			product.brand,
			product."pName",
			product.price
		from customer join "likedProduct" on customer."customerId" = "likedProduct"."customerId"
					  join 	product on "likedProduct"."productId" = "product"."productId"
					  left outer join "productMainImage" on "productMainImage"."productId" = "product"."productId"
		where customer."customerId" = cast(#{customerId} as UUID)
			<if test="searchWord != ''">
				AND (product.brand LIKE #{searchWord} OR
					 product."pName" LIKE #{searchWord})
		 	</if>
	</select>
</mapper>